package com.capgemini.librarymanagementsystemjdbc.dao;

import java.io.FileInputStream;
import java.sql.DriverManager;
import java.util.Properties;

import com.capgemini.librarymanagementsystemjdbc.dto.Admin;
import com.capgemini.librarymanagementsystemjdbc.dto.Books;
import com.capgemini.librarymanagementsystemjdbc.dto.User;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;

public class AdminDAOImplementation implements AdminDAO{

	@Override
	public boolean adminLogin(String adminEmail, String adminpassword) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean register(Admin admin) {
		// TODO Auto-generated method stub
		try(FileInputStream	fin = new FileInputStream("dburl.properties")){

			Properties pro = new Properties();
			pro.load(fin);

			//Class.forName(pro.getProperty("path")).newInstance();
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			String dburl="jdbc:mysql://localhost:3306/library_management_system?user=root&password=root";
			try(Connection conn = DriverManager.getConnection(dburl)){
				String query = "insert into admin values (?,?,?,?)";
				try(PreparedStatement pstmt = conn.prepareStatement(query)){
					pstmt.setString(1, admin.getadminName());
					pstmt.setString(2, admin.getId());
					pstmt.setString(3, admin.getEmail());
					pstmt.setString(4, admin.getPassword());
					int count = pstmt.executeUpdate();
				}
			}

		}catch(Exception e) {
			e.printStackTrace();
		}
		return false;
	}

	@Override
	public boolean addBook(Books book) {
		// TODO Auto-generated method stub
		try(FileInputStream	fin = new FileInputStream("dburl.properties")){

			Properties pro = new Properties();
			pro.load(fin);

			//Class.forName(pro.getProperty("path")).newInstance();
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			String dburl="jdbc:mysql://localhost:3306/library_management_system?user=root&password=root";
			try(Connection conn = DriverManager.getConnection(dburl)){
				String query = "insert into book values (?,?,?,?,?,?)";
				try(PreparedStatement pstmt = conn.prepareStatement(query)){
					pstmt.setString(1, book.getBookName());
					pstmt.setString(2, book.getBookId());
					pstmt.setString(3, book.getAuthor());
					pstmt.setString(4, book.getBookPublisher());
					pstmt.setString(5, book.getDateAdded());
					pstmt.setInt(6, book.getReturnDate());
					
					
					int count = pstmt.executeUpdate();
				}
			}

		}catch(Exception e) {
			e.printStackTrace();
		}
		return false;
	}

	@Override
	public boolean removeBook(String bookId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean issueBook(String userEmail, String bookId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean collectBook(String bookId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean addUser(User user, int count) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean removeUser(String userEmail) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean updateUser(User user) {
		// TODO Auto-generated method stub
		return false;
	}
	

}
